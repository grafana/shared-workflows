name: Generate OpenAPI client
description: Takes in a locally stored OpenAPI spec and generates a client from it

inputs:
  generator-version:
    description: "The version of the OpenAPI generator to use"
    required: false
    default: "7.7.0"
  spec-path:
    description: "The path to the OpenAPI spec to generate the client from"
    required: true
  output-dir:
    description: "The directory to output the generated client to"
    required: false
    default: "."
  commit-changes:
    description: If true, the action will commit and push the changes to the repository, if there's a diff.
    required: false
    default: "true"
  commit-message:
    description: The commit message to use when committing the changes
    required: false
    default: "Update clients and publish"
  package-name:
    description: The name of the package to generate
    required: true
  modify-spec-script:
    description: |
      The path to an executable script that modifies the OpenAPI spec before generating the client. 
      The spec will be piped into the script and the script should output the modified spec to stdout.
      Note: This is used as a workaround for the OpenAPI generator not supporting certain features. By using
      this feature, the spec will be modified temporarily, and the changes will not be committed.
    required: false
    default: ""

runs:
  using: composite
  steps:
    # Get the repository name
    - shell: bash
      run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    # Get openapi-generator
    - id: openapi-generator-cache
      uses: actions/cache/restore@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
      with:
        key: openapi-generator-${{ inputs.generator-version }}
        path: openapi-generator-cli.jar
    - shell: bash
      if: steps.openapi-generator-cache.outputs.cache-hit != 'true'
      run: |
        wget -nv "https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/${{ inputs.generator-version }}/openapi-generator-cli-${{ inputs.generator-version }}.jar" -O ./openapi-generator-cli.jar
    - uses: actions/cache/save@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
      if: steps.openapi-generator-cache.outputs.cache-hit != 'true'
      with:
        key: openapi-generator-${{ inputs.generator-version }}
        path: openapi-generator-cli.jar

    # Modify the spec if a script is provided
    - shell: bash
      run: |
        if [ -n "${{ inputs.modify-spec-script }}" ]; then
          cat "${{ inputs.spec-path }}" | "${{ inputs.modify-spec-script }}" > temp-spec.txt
          echo "SPEC_PATH=temp-spec.txt" >> $GITHUB_ENV
        else
          echo "SPEC_PATH=${{ inputs.spec-path }}" >> $GITHUB_ENV
        fi
      env:
        SPEC_PATH: ${{ inputs.spec-path }}

    # Generate the client
    - shell: bash
      run: ${GITHUB_ACTION_PATH}/generate.sh
      env:
        OUTPUT_DIR: ${{ inputs.output-dir }}
        PACKAGE_NAME: ${{ inputs.package-name }}

    # Cleanup files that shouldn't be committed
    - shell: bash
      run: |
        rm openapi-generator-cli.jar
        if [ -n "${{ inputs.modify-spec-script }}" ]; then
          rm temp-spec.txt
        fi

    # Commit the changes
    - uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842 # v5.0.1
      if: ${{ inputs.commit-changes == 'true' }}
      with:
        commit_message: ${{ inputs.commit-message }}
