name: Login to GCS
description: Composite action to login to Google Cloud Storage
inputs:
  bucket:
    description: |
      Name of bucket to upload to. Will default to grafanalabs-${repository.name}-${environment}
    default: ""
  environment:
    description: |
      Environment for uploading objects (can be either dev or prod).
    default: dev
  service_account:
    description: |
      Custom service account to use for authentication.
    default: ""
  delete_credentials_file:
    description: |
      Delete the credentials file after the action is finished.
      If you want to keep the credentials file for a later step, set this to false.
    default: "false"

outputs:
  bucket:
    description: "The name of the bucket that we have authenticated to."
    value: ${{ steps.construct-account-vars.outputs.bucket }}

runs:
  using: composite
  steps:
    - name: Resolve GCP project
      id: resolve-project
      shell: bash
      run: |
        if [[ "${ENVIRONMENT}" == "dev" ]]; then
          PROJECT="grafanalabs-dev"
        elif [[ "${ENVIRONMENT}" == "prod" ]]; then
          PROJECT="grafanalabs-global"
        else
          echo "Invalid environment. Valid environment variable inputs: dev, prod"
          exit 1
        fi
        echo "project=${PROJECT}" | tee -a ${GITHUB_OUTPUT}
      env:
        ENVIRONMENT: ${{ inputs.environment }}
    - name: Construct dynamic account vars
      id: construct-account-vars
      shell: bash
      run: |
        # Construct repo name
        REPO_NAME=$(echo ${{ github.repository }} | awk -F'/' '{print $2}')
        echo "repo_name=${REPO_NAME}" | tee -a ${GITHUB_OUTPUT}

        # Construct bucket name
        if [[ "${BUCKET}" == "" ]]; then
          BUCKET="grafanalabs-${REPO_NAME}-${ENVIRONMENT}"
        else
          BUCKET="${BUCKET}"
        fi
        echo "bucket=${BUCKET}" | tee -a ${GITHUB_OUTPUT}

        # Construct service account
        if [[ "${SERVICE_ACCOUNT}" == "" ]]; then
          SERVICE_ACCOUNT="github-${{ github.repository_id }}-${ENVIRONMENT}-gcs@grafanalabs-workload-identity.iam.gserviceaccount.com"
        else
          SERVICE_ACCOUNT="${SERVICE_ACCOUNT}"
        fi
        echo "service_account=${SERVICE_ACCOUNT}" | tee -a ${GITHUB_OUTPUT}
      env:
        BUCKET: ${{ inputs.bucket }}
        ENVIRONMENT: ${{ inputs.environment }}
        SERVICE_ACCOUNT: ${{ inputs.service_account }}
    - uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
      id: gcloud-auth
      with:
        workload_identity_provider: "projects/304398677251/locations/global/workloadIdentityPools/github/providers/github-provider"
        service_account: ${{ steps.construct-account-vars.outputs.service_account }}
    - name: Delete Google Application Credentials file
      if: ${{ inputs.delete_credentials_file == 'true' && env.GOOGLE_APPLICATION_CREDENTIALS != '' }}
      shell: sh
      run: |
        if [ -f "${GOOGLE_APPLICATION_CREDENTIALS}" ]; then
          rm -f "${GOOGLE_APPLICATION_CREDENTIALS}"
          echo "::notice::Successfully deleted credentials file"
        else
          echo "::warning::Credentials file not found at ${GOOGLE_APPLICATION_CREDENTIALS}"
        fi
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
