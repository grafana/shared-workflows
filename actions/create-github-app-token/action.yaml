name: Create GitHub App Token
description: Composite action (step) to get create github app token using vault.
inputs:
  permission_set:
    description: Permission set name
    default: default
  github_app:
    description: |
      GitHub app name in Vault. You can define mutiple app to do a loadbalancing in a comma separated format.
  vault_instance:
    description: |
      The Vault instance to use (`dev` or `ops`). Defaults to `ops`.
    default: ops
outputs:
  token:
    description: "GitHub installation access token"
    value: ${{ steps.generate-token.outputs.github_token }}
runs:
  using: composite
  steps:
    - id: check-vault-instance
      if: inputs.vault_instance != 'dev' && inputs.vault_instance != 'ops'
      shell: bash
      env:
        VAULT_INSTANCE: ${{ inputs.vault_instance }}
      run: |
        echo "Invalid value for vault_instance input: ${VAULT_INSTANCE}. Must be 'dev' or 'ops'."
        exit 1

    - id: normalize-workflow-name
      shell: bash
      env:
        WORKFLOW_REF: ${{ github.workflow_ref }}
      run: |
        RAW_NAME="${WORKFLOW_REF}"
        REF_SHA=$(echo -n "$RAW_NAME" | sed -E 's|^[^/]*/[^/]*/||' | sed -E 's/@.*//' | sha256sum | awk '{print $1}')
        echo "ref_sha=$REF_SHA" >> "$GITHUB_OUTPUT"

    - id: get-github-jwt-token-proxy
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        VAULT_INSTANCE: ${{ inputs.vault_instance }}
      with:
        script: |
          const audience = "vault-github-actions-grafana-" + process.env.VAULT_INSTANCE
          const script = require(process.env.GITHUB_ACTION_PATH + '/create_github_token.js')
          console.log(script({core, audience}))

    - id: get-github-jwt-token-vault
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      env:
        VAULT_INSTANCE: ${{ inputs.vault_instance }}
      with:
        script: |
          const audience = "https://vault-github-actions.grafana-" + process.env.VAULT_INSTANCE + ".net"
          const script = require(process.env.GITHUB_ACTION_PATH + '/create_github_token.js')
          console.log(script({core, audience}))

    - name: Authenticate with Vault
      id: auth-vault
      shell: bash
      env:
        VAULT_INSTANCE: ${{ inputs.vault_instance }}
        REPOSITORY_NAME: ${{ github.event.repository.name }}
        PERMISSION_SET: ${{ inputs.permission_set}}
        VAULT_URL: "https://vault-github-actions.grafana-${{ inputs.vault_instance }}.net"
        GITHUB_JWT_PROXY: ${{ steps.get-github-jwt-token-proxy.outputs.github-jwt }}
        GITHUB_JWT_VAULT: ${{ steps.get-github-jwt-token-vault.outputs.github-jwt }}
        REF_SHA: ${{ steps.normalize-workflow-name.outputs.ref_sha }}
      run: |
        ${GITHUB_ACTION_PATH}/auth_vault.sh

    - name: Get GitHub Token
      id: generate-token
      shell: bash
      env:
        VAULT_INSTANCE: ${{ inputs.vault_instance }}
        REPOSITORY_NAME: ${{ github.event.repository.name }}
        PERMISSION_SET: ${{ inputs.permission_set}}
        GITHUB_APP: ${{ inputs.github_app }}
        VAULT_URL: "https://vault-github-actions.grafana-${{ inputs.vault_instance }}.net"
        VAULT_TOKEN: ${{ steps.auth-vault.outputs.vault_token }}
        GITHUB_JWT_PROXY: ${{ steps.get-github-jwt-token-proxy.outputs.github-jwt }}
        REF_SHA: ${{ steps.normalize-workflow-name.outputs.ref_sha }}
      run: |
        ${GITHUB_ACTION_PATH}/create_token.sh
