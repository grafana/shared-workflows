name: Build & Publish Docker image
description: Build and publish docker images to DockerHub

inputs:
  repository:
    description: |
      The caller workflow's repository
  tags:
    description: |
      List of Docker images to be pushed.
    required: true
  context:
    description: |
      Path to the Docker build context.
    default: "."
  platforms:
    description: |
      List of platforms to build the image for
    required: false
  push:
    description: |
      Also push the generated images to DockerHub
    default: "false"
  file:
    description: |
      The dockerfile to use.
    required: false
  build-args:
    description: |
      List of arguments necessary for the Docker image to be built.
    required: false
    default: ""
  target:
    description: |
      Target stage to build
    required: false
  cache-from:
    description: |
      Where cache should be fetched from
    required: false
    default: "type=gha"
  cache-to:
    description: |
      Where cache should be stored to
    required: false
    default: "type=gha,mode=max"
  docker-buildx-driver:
    description: |
      The driver to use for Docker Buildx
    required: false
    default: "docker-container"
  secrets:
    description: |
      Secrets to expose to the build. Only needed when authenticating to private repositories outside the repository in which the image is being built.
    required: false

runs:
  using: composite
  steps:
    # See this conversation for more context as to why we don't want to allow pushes on pull requests
    # https://github.com/grafana/shared-workflows/pull/143#discussion_r1628314620
    - name: Check if push is allowed
      if: ${{ inputs.push == 'true' && github.event_name == 'pull_request' }}
      shell: sh
      run: |
        >&2 echo "Publishing to DockerHub is not allowed on pull_request events."
        >&2 echo "If you still want to build images without pushing them, set the push input to false."
        exit 1

    - name: Checkout shared workflows
      env:
        # In a composite action, these two need to be indirected via the
        # environment, as per the GitHub actions documentation:
        # https://docs.github.com/en/actions/learn-github-actions/contexts
        action_repo: ${{ github.action_repository }}
        action_ref: ${{ github.action_ref }}
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: ${{ env.action_repo }}
        ref: ${{ env.action_ref }}
        path: _shared-workflows-build-push-to-dockerhub
        persist-credentials: false

    - name: Login to DockerHub
      if: ${{ inputs.push == 'true' }}
      uses: ./_shared-workflows-build-push-to-dockerhub/actions/dockerhub-login

    # If platforms is specified then also initialize buildx and qemu:
    - name: Set up QEMU
      if: inputs.platforms
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      with:
        driver: ${{ inputs.docker-buildx-driver }}
        buildkitd-config: ${{ runner.environment == 'self-hosted' && '/etc/buildkitd.toml' || '' }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      with:
        images: ${{ inputs.repository }}
        tags: ${{ inputs.tags }}

    - name: Build and push Docker image
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: ${{ inputs.context }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ${{ inputs.file }}
        build-args: ${{ inputs.build-args }}
        target: ${{ inputs.target }}
        cache-from: ${{ inputs.cache-from }}
        cache-to: ${{ inputs.cache-to }}
        secrets: ${{ inputs.secrets }}
