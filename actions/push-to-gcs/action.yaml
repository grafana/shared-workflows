name: Push to cloud storage
description: Composite action to push to Google Cloud Storage
inputs:
  bucket:
    description: |
      Name of bucket to upload to. Will default to grafanalabs-${repository.id}-${environment}
    default: ""
  object:
    description: |
      Object name and location to upload to. Will create sub-folders in the bucket.
      Valid examples include `thing.txt` and `path/to/thing.txt`
    required: true
  bucket_path:
    description: |
      The path in the bucket to save the object. Defaults to the root of the bucket.
    default: ""
  environment:
    description: |
      Environment for uploading objects (can be either dev or prod).
    default: dev

runs:
  using: composite
  steps:
    - name: Resolve GCP project
      id: resolve-project
      shell: bash
      run: |
        if [ "${{ inputs.environment }}" = "dev" ]; then
          PROJECT="grafanalabs-dev"
        elif [ "${{ inputs.environment }}" == "prod" ]; then
          PROJECT="grafanalabs-global"
        else
          echo "Invalid environment. Valid environment variable inputs: dev, prod"
          exit 1
        fi
        echo "project=${PROJECT}" >> ${GITHUB_OUTPUT}
    - name: Construct destination
      id: construct-destination
      shell: bash
      run: |
        # Construct bucket name
        if [ "${{ inputs.bucket }}" == "" ]; then
          BUCKET="grafanalabs-${{ github.repository_id }}-${{ inputs.environment }}"
        else
          BUCKET="${{ inputs.bucket }}"
        fi

        # Construct destination file path (can be different than the source file path)
        # First, get object name from full file path
        FILENAME=$(echo ${{ inputs.object }} | awk -F/ '{print $NF}')

        # Then, check if path was passed in, and join together with bucket_name if so
        if [ "${{ inputs.bucket_path }}" != "" ]; then
          BUCKET_PATH="${{ inputs.bucket_path }}
          DESTINATION="${BUCKET}/${BUCKET_PATH%/}"
        fi

        echo "Setting file_name to ${FILENAME}"
        echo "file_name=${FILENAME}" >> ${GITHUB_OUTPUT}
        echo "Setting destination to ${DESTINATION}"
        echo "destination=${DESTINATION}" >> ${GITHUB_OUTPUT}
    - name: Construct service account
      id: construct-service-account
      shell: bash
      run: |
        SERVICE_ACCOUNT="github-${{ github.repository_id }}-${{ inputs.environment }}-gcs@grafanalabs-workload-identity.iam.gserviceaccount.com"
        echo "service_account=${SERVICE_ACCOUNT}" >> ${GITHUB_OUTPUT}
    - uses: google-github-actions/auth@5a50e581162a13f4baa8916d01180d2acbc04363 # v2.1.0
      id: gcloud-auth
      with:
#        token_format: access_token
        workload_identity_provider: "projects/304398677251/locations/global/workloadIdentityPools/github/providers/github-provider"
        service_account: ${{ steps.construct-service-account.outputs.service_account }}
#        create_credentials_file: false
    - uses: google-github-actions/upload-cloud-storage@22121cd842b0d185e042e28d969925b538c33d77 # v2.1.0
      id: upload-files
      with:
        path: ${{ steps.construct-destination.outputs.file_name }}  # object name
        destination: ${{ steps.construct-destination.outputs.destination }}  # bucket name plus folder prefix (if applicable)
