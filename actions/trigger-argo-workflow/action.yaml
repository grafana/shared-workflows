name: Trigger Argo Workflow
description: Trigger an Argo workflow in the Grafana Labs Argo Workflows instance

inputs:
  instance:
    description: |
      The instance to use (`dev` or `ops`). Defaults to `ops`.
    default: ops
  namespace:
    description: |
      Required. The namespace to trigger the workflow in.
    required: true
  parameters:
    description: |
      The newline-separated parameters to pass to the Argo workflow. Ex:

      ```
      param1=value1
      param2=value2
      ```
  workflow_template:
    description: |
      The workflow template to use. Defaults to `grafana-ci`.
    required: true
  extra_args:
    description: |
      Extra arguments to pass to the Argo CLI. Ex: `--generate-name foo-"
  log_level:
    description: |
      The log level to use. Choose from `debug`, `info`, `warn` or `error`. Defaults to `info`.
    default: info

outputs:
  uri:
    description: |
      The URI of the workflow that was triggered.
    value: ${{ steps.run.outputs.uri }}

runs:
  using: composite

  steps:
    - name: Checkout
      env:
        # In a composite action, these two need to be indirected via the
        # environment, as per the GitHub actions documentation:
        # https://docs.github.com/en/actions/learn-github-actions/contexts
        action_repo: ${{ github.action_repository }}
        action_ref: ${{ github.action_ref }}
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        repository: ${{ env.action_repo }}
        ref: ${{ env.action_ref }}
        path: _shared-workflows-trigger-argo-workflow

    - name: Setup argo
      uses: ./_shared-workflows-trigger-argo-workflow/actions/setup-argo

    - name: Setup go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        check-latest: true
        cache-dependency-path: |
          actions/trigger-argo-workflow/go.sum
        go-version-file: "_shared-workflows-trigger-argo-workflow/actions/trigger-argo-workflow/go.mod"

    - name: Get Argo Token
      id: get-argo-token
      uses: ./_shared-workflows-trigger-argo-workflow/actions/get-vault-secrets
      with:
        vault_instance: ${{ inputs.instance }}
        repo_secrets: |
          ARGO_TOKEN=argo-workflows-trigger:token

    - name: Run
      id: run
      shell: bash
      run: |
        cd _shared-workflows-trigger-argo-workflow/actions/trigger-argo-workflow

        # Split the parameters into an array and pass them to the action as --parameter PARAM
        while read -r line; do
          if [ -z "${line}" ]; then
            continue
          fi

          parameters+=("--parameter" "$line")
        done <<< "${{ inputs.parameters }}"

        if [ -n "${{ inputs.workflow_template }}" ]; then
          parameters+=("--workflow-template" "${{ inputs.workflow_template }}")
        fi

        go run github.com/grafana/shared-workflows/actions/trigger-argo-workflow/cmd/trigger-argo-workflow \
          --log-level "${{ inputs.log_level }}" \
          --namespace "${{ inputs.namespace }}" \
          --instance "${{ inputs.instance }}" \
          "${parameters[@]}" \
          submit \
          ${{ inputs.extra_args }}
      env:
        ARGO_TOKEN: ${{ env.ARGO_TOKEN }}
