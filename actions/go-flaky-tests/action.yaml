name: "Go Flaky Tests"
description: "Detect and analyze flaky Go tests using Loki logs"
author: "Grafana Labs"

inputs:
  loki-url:
    description: "Loki endpoint URL"
    required: true
  loki-username:
    description: "Username for Loki authentication"
    required: false
  loki-password:
    description: "Password for Loki authentication"
    required: false
  repository:
    description: "Repository name in 'owner/repo' format (e.g., 'grafana/grafana')"
    required: true
  time-range:
    description: "Time range for the query (e.g., '1h', '24h', '7d')"
    required: false
    default: "1h"
  repository-directory:
    description: "Relative path to the directory with a git repository"
    required: false
    default: ${{ github.workspace }}
  github-token:
    description: "GitHub token for repository access"
    required: false
    default: ${{ github.token }}
  skip-posting-issues:
    description: "Skip creating/updating GitHub issues (dry-run mode)"
    required: false
    default: "true"
  top-k:
    description: "Include only the top K flaky tests by distinct branches count in analysis"
    required: false
    default: "3"

runs:
  using: "composite"
  steps:
    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
      with:
        go-version: "1.25"

    - name: Setup GitHub CLI
      run: |
        # GitHub CLI is pre-installed on GitHub Actions runners
        # Just verify it's available and authenticated
        gh --version
      shell: bash

    - name: Build and run analyzer
      shell: bash
      run: |
        cd ${{ github.action_path }}
        go build -o analyzer ./cmd/go-flaky-tests
        ./analyzer
      env:
        LOKI_URL: ${{ inputs.loki-url }}
        LOKI_USERNAME: ${{ inputs.loki-username }}
        LOKI_PASSWORD: ${{ inputs.loki-password }}
        REPOSITORY: ${{ inputs.repository }}
        TIME_RANGE: ${{ inputs.time-range }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        REPOSITORY_DIRECTORY: ${{ inputs.repository-directory }}
        SKIP_POSTING_ISSUES: ${{ inputs.skip-posting-issues }}
        TOP_K: ${{ inputs.top-k }}
