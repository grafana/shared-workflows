name: Push to artifact registry
description: Composite action to push to Google Artifact Registry

inputs:
  registry:
    description: |
      Google Artifact Registry to store docker images in.
    default: "us-docker.pkg.dev"
  tags:
    description: |
      List of Docker images to be pushed.
    required: true
  context:
    description: |
      Path to the Docker build context.
    default: "."
  environment:
    description: |
      Environment for pushing artifacts (can be either dev or prod).
    default: dev
  image_name:
    description: |
      Name of the image to be pushed to GAR.
    required: true
  build-args:
    description: |
      List of arguments necessary for the Docker image to be built.
    default: ""
  push:
    description: |
      Whether to push the image to the registry.
    required: false
    default: ${{ github.event_name == 'push' }}
  file:
    description: |
      The dockerfile to use.
    required: false
  platforms:
    description: |
      List of platforms to build the image for
    required: false
  cache-from:
    description: |
      Where cache should be fetched from
    required: false
    default: "type=gha"
  cache-to:
    description: |
      Where cache should be stored to
    required: false
    default: "type=gha,mode=max"
  ssh:
    description: |
      List of SSH agent socket or keys to expose to the build
  build-contexts:
    description: |
      List of additional build contexts (e.g., name=path)
    required: false
  docker-buildx-driver:
    description: |
      The driver to use for Docker Buildx
    required: false
    default: "docker-container"
  repository_name:
    description: |
      Override the 'repo_name' used to construct the GAR repository name. Only necessary when the GAR includes a repo name that doesn't match the GitHub repo name.
    required: false
  labels:
    description: |
      List of custom labels to add to the image as metadata.
    required: false
  target:
    description: |
      Sets the target stage to build
    required: false
  delete_credentials_file:
    description: |
      Delete the credentials file after the action is finished.
      If you want to keep the credentials file for a later step, set this to false.
    default: "true"
  secrets:
    description: |
      Secrets to expose to the build. Only needed when authenticating to private repositories outside the repository in which the image is being built.
    required: false
  load:
    description: |
      Whether to load the built image into the local docker daemon.
    required: false
    default: "false"

outputs:
  version:
    description: "Generated Docker image version (from docker/metadata-action)"
    value: ${{ steps.meta.outputs.version }}
  tags:
    description: "Generated Docker tags (from docker/metadata-action)"
    value: ${{ steps.meta.outputs.tags }}
  labels:
    description: "Generated Docker labels (from docker/metadata-action)"
    value: ${{ steps.meta.outputs.labels }}
  annotations:
    description: "Generated annotations (from docker/metadata-action)"
    value: ${{ steps.meta.outputs.annotations }}
  json:
    description: "JSON output of tags and labels (from docker/metadata-action)"
    value: ${{ steps.meta.outputs.json }}
  imageid:
    description: "Image ID (from docker/build-push-action)"
    value: ${{ steps.build.outputs.imageid }}
  digest:
    description: "Image digest (from docker/build-push-action)"
    value: ${{ steps.build.outputs.digest }}
  metadata:
    description: "Build result metadata (from docker/build-push-action)"
    value: ${{ steps.build.outputs.metadata }}

runs:
  using: composite
  steps:
    - name: Checkout
      env:
        action_repo: ${{ github.action_repository }}
        action_ref: ${{ github.action_ref }}
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: ${{ env.action_repo }}
        ref: ${{ env.action_ref }}
        path: _shared-workflows-push-to-gar
        persist-credentials: false

    - name: Get repository name
      id: get-repository-name
      shell: bash
      env:
        REPO_NAME: ${{ inputs.repository_name }}
      run: |
        if [ -z "$REPO_NAME" ]; then
          REPO_NAME="$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')"
          # In Artifact Registry, underscores are not allowed in repository
          # names. By convention, we replace them with hyphens.
          REPO_NAME="${REPO_NAME//_/-}"
        fi
        echo "repo_name=${REPO_NAME}" >> "${GITHUB_OUTPUT}"

    - name: Resolve GCP project
      id: resolve-project
      shell: bash
      env:
        ENVIRONMENT: ${{ inputs.environment }}
      run: |
        if [[ "${ENVIRONMENT}" == "dev" ]]; then
          PROJECT="grafanalabs-dev"
        elif [[ "${ENVIRONMENT}" == "prod" ]]; then
          PROJECT="grafanalabs-global"
        else
          echo "Invalid environment. Valid environment variable inputs: dev, prod"
          exit 1
        fi
        echo "project=${PROJECT}" | tee -a ${GITHUB_OUTPUT}

    - name: Login to GAR
      if: ${{ inputs.push == 'true' }}
      uses: ./_shared-workflows-push-to-gar/actions/login-to-gar
      with:
        environment: ${{ inputs.environment }}
        delete_credentials_file: false
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: "${{ inputs.registry }}/${{ steps.resolve-project.outputs.project }}/docker-${{ steps.get-repository-name.outputs.repo_name }}-${{ inputs.environment }}/${{ inputs.image_name }}"
        tags: ${{ inputs.tags }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      with:
        driver: ${{ inputs.docker-buildx-driver }}
        version: latest # see https://github.com/docker/build-push-action/issues/1345#issuecomment-2770572479
        buildkitd-config: ${{ runner.environment == 'self-hosted' && '/etc/buildkitd.toml' || '' }}

    # The `context` input is flagged by Zizmor as a [sink]. This means that with
    # the upstream action the user's input to the input ends up in an output,
    # and so if it's not handled properly, it could lead to a template injection
    # attack. In this action, we do pass this back out via our `metadata`
    # output. However, we consider ourselves a proxy, so in that case our job is
    # to warn users but not to take any action.
    #
    # [sink]: https://github.blog/security/application-security/how-to-secure-your-github-actions-workflows-with-codeql/#models
    - name: Build the container # zizmor: ignore[template-injection]
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      id: build
      with:
        context: ${{ inputs.context }}
        build-args: ${{ inputs.build-args }}
        push: ${{ inputs.push == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ inputs.labels }}
        target: ${{ inputs.target }}
        cache-from: ${{ inputs.cache-from }}
        cache-to: ${{ inputs.cache-to }}
        file: ${{ inputs.file }}
        platforms: ${{ inputs.platforms }}
        ssh: ${{ inputs.ssh }}
        build-contexts: ${{ inputs.build-contexts }}
        secrets: ${{ inputs.secrets }}
        load: ${{ inputs.load == 'true' }}

    - name: Cleanup checkout directory
      if: ${{ !cancelled() }}
      shell: bash
      run: |
        # Check that the directory looks OK before removing it
        if ! [ -d "_shared-workflows-push-to-gar/.git" ]; then
          echo "::warning Not removing shared workflows directory: doesn't look like a git repository"
          exit 0
        fi

        rm -rf _shared-workflows-push-to-gar

    - name: Delete Google Application Credentials file
      if: ${{ inputs.delete_credentials_file == 'true' && env.GOOGLE_APPLICATION_CREDENTIALS != '' }}
      shell: sh
      run: |
        if [ -f "${GOOGLE_APPLICATION_CREDENTIALS}" ]; then
          rm -f "${GOOGLE_APPLICATION_CREDENTIALS}"
          echo "::notice::Successfully deleted credentials file"
        else
          echo "::warning::Credentials file not found at ${GOOGLE_APPLICATION_CREDENTIALS}"
        fi
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
