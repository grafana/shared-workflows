name: Push to artifact registry
description: Composite action to push to Google Artifact Registry
inputs:
  registry:
    description: |
      Google Artifact Registry to store docker images in.
    default: "us-docker.pkg.dev"
  tags:
    description: |
      List of Docker images to be pushed.
    required: true
  context:
    description: |
      Path to the Docker build context.
    default: "."
  environment:
    description: |
      Environment for pushing artifacts (can be either dev or prod).
    default: dev
  image_name:
    description: |
      Name of the image to be pushed to GAR.
    required: true
  build-args:
    description: |
      List of arguments necessary for the Docker image to be built.
    default: ""
  file:
    description: |
      The dockerfile to use.
    required: false
  platforms:
    description: |
      List of platforms to build the image for
    required: false
  cache-from:
    description: |
      Where cache should be fetched from
    required: false
    default: "type=gha"
  cache-to:
    description: |
      Where cache should be stored to
    required: false
    default: "type=gha,mode=max"
  ssh:
    desctiption: |
      List of SSH agent socket or keys to expose to the build

outputs:
  version:
    description: 'Generated Docker image version (from docker/metadata-action)'
    value: ${{ steps.meta.outputs.version }}
  tags:
    description: 'Generated Docker tags (from docker/metadata-action)'
    value: ${{ steps.meta.outputs.tags }}
  labels:
    description: 'Generated Docker labels (from docker/metadata-action)'
    value: ${{ steps.meta.outputs.labels }}
  annotations:
    description: 'Generated annotations (from docker/metadata-action)'
    value: ${{ steps.meta.outputs.annotations }}
  json:
    description: 'JSON output of tags and labels (from docker/metadata-action)'
    value: ${{ steps.meta.outputs.json }}
  imageid:
    description: 'Image ID (from docker/build-push-action)'
    value: ${{ steps.build.outputs.imageid }}
  digest:
    description: 'Image digest (from docker/build-push-action)'
    value: ${{ steps.build.outputs.digest }}
  metadata:
    description: 'Build result metadata (from docker/build-push-action)'
    value: ${{ steps.build.outputs.metadata }}

runs:
  using: composite
  steps:
    - name: Checkout
      env:
        action_repo: ${{ github.action_repository }}
        action_ref: ${{ github.action_ref }}
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        repository: ${{ env.action_repo }}
        ref: ${{ env.action_ref }}
        path: shared-workflows    
    - name: Get repository name
      id: get-repository-name
      shell: bash
      run: |
        REPO_NAME=$(echo ${{ github.repository }} | awk -F'/' '{print $2}')
        echo "repo_name=${REPO_NAME}" >> ${GITHUB_OUTPUT}
    - name: Resolve GCP project
      id: resolve-project
      shell: bash
      run: |
        if [ "${{ inputs.environment }}" == 'dev' ]; then
          PROJECT="grafanalabs-dev"
        elif [ "${{ inputs.environment }}" == 'prod' ]; then
          PROJECT="grafanalabs-global"
        else
          echo "Invalid environment. Valid environment variable inputs: dev, prod"
          exit 1
        fi
        echo "project=${PROJECT}" >> ${GITHUB_OUTPUT}
    - name: Login to GAR
      uses: ./shared-workflows/actions/login-to-gar
      with:
        environment: ${{ inputs.environment }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
      with:
        images: "${{ inputs.registry }}/${{ steps.resolve-project.outputs.project }}/docker-${{ steps.get-repository-name.outputs.repo_name }}-${{ inputs.environment }}/${{ inputs.image_name }}"
        tags: ${{ inputs.tags }}
        create_credentials_file: false
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
    - name: Build the container
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
      id: build
      with:
        context: ${{ inputs.context }}
        build-args: ${{ inputs.build-args }}
        push: ${{ github.event_name == 'push' }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: ${{ inputs.cache-from }}
        cache-to: ${{ inputs.cache-to }}
        file: ${{ inputs.file }}
        platforms: ${{ inputs.platforms }}
        ssh: ${{ inputs.ssh }}
