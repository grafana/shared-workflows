name: Test Setup Argo
on:
  push:
    branches:
      - main
    paths:
      - actions/setup-argo/**
      - .github/workflows/test-setup-argo.yml

  pull_request:
    branches:
      - main
    paths:
      - actions/setup-argo/**
      - .github/workflows/test-setup-argo.yml
    types:
      - edited
      - opened
      - ready_for_review
      - synchronize

  merge_group:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup-argo:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write # needed for cache

    env:
      # generate a unique cache prefix for each test run, so we can test cache behaviour
      CACHE_PREFIX: argo-${{ github.run_id }}-${{ github.run_attempt }}

    strategy:
      matrix:
        cache-hit: [false, true]
      max-parallel: 1

    name: "Setup Argo (cache hit: ${{ matrix.cache-hit }})"

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
          sparse-checkout: |
            actions/setup-argo

      - name: "Setup Argo (cache: ${{ matrix.cache-hit }})"
        id: setup-argo
        uses: ./actions/setup-argo
        with:
          cache-prefix: ${{ env.CACHE_PREFIX }}
          version: 3.5.1

      - name: Assert cache
        if: fromJson(steps.setup-argo.outputs.cache-hit) != matrix.cache-hit
        run: |
          echo "Expected cache hit: '${{ matrix.cache-hit }}' but got '${{ fromJson(steps.setup-argo.outputs.cache-hit) }}'"
          exit 1

      - name: Check Argo CLI works
        run: argo version
