name: Publish Backstage TechDocs

on:
  workflow_call:
    inputs:
      namespace:
        description: The entity's namespace within EngHub (usually `default`)
        required: true
        type: string
      kind:
        description: The kind of the entity in EngHub (usually `component`)
        required: true
        type: string
      name:
        description: The name of the entity in EngHub (usually matches the name of the repository)
        required: true
        type: string
      default-working-directory:
        description: "The working directory to use for doc generation. Useful for cases without an mkdocs.yml file at the project root."
        required: false
        type: string
        default: "."
      rewrite-relative-links:
        description: "Execute rewrite-relative-links step to rewrite relative links in the docs to point to the correct location in the GitHub repository"
        required: false
        type: boolean
        default: false
      rewrite-relative-links-dry-run:
        description: "Execute rewrite-relative-links step but only print the diff without modifying the files"
        required: false
        type: boolean
        default: false
      publish:
        description: "Enable or disable publishing after building the docs"
        required: false
        type: boolean
        default: true
      checkout-submodules:
        description: "Checkout submodules in the repository. Options are `true` (checkout submodules), `false` (don't checkout submodules), or `recursive` (recursively checkout submodules)"
        required: false
        type: string
        default: "false"
      instance:
        description: The instance to use (`dev` or `ops`). Defaults to `ops`.
        required: false
        default: "ops"
        type: string

permissions:
  contents: read

jobs:
  generate-and-publish-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Harden the runner (Audit all outbound calls)
        if: ${{ ! github.event.repository.private }}
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - id: checkout
        name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false

      - id: checkout-shared-workflows
        name: Checkout shared workflows
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
          repository: grafana/shared-workflows
          ref: main
          path: _shared-workflows-publish-techdocs
          submodules: "${{ inputs.checkout-submodules }}"

      - name: Rewrite relative links
        if: inputs.rewrite-relative-links || inputs.rewrite-relative-links-dry-run
        uses: ./_shared-workflows-publish-techdocs/actions/techdocs-rewrite-relative-links
        with:
          working-directory: "${{ inputs.default-working-directory }}"
          repo-url: "https://github.com/${{ github.repository }}"
          default-branch: "${{ github.event.repository.default_branch }}"
          dry-run: "${{ inputs.rewrite-relative-links-dry-run }}"
          checkout-action-repository: "false"
          checkout-action-repository-path: _shared-workflows-publish-techdocs

      - id: instance-settings
        shell: sh
        env:
          INSTANCE_ENV: ${{ inputs.instance }}
        run: |
          case "${INSTANCE_ENV}" in
            dev)
              aws_role_arn=arn:aws:iam::663667355653:role/github-actions/backstage-techdocs-publisher
              aws_region=us-east-2
              aws_bucket=dev-us-east-0-backstage
              ;;
            ops)
              aws_role_arn=arn:aws:iam::058264369985:role/github-actions/backstage-techdocs-publisher
              aws_region=eu-south-2
              aws_bucket=ops-eu-south-0-backstage
              ;;
            *)
              echo "unknown instance"
              exit 1
              ;;
          esac

          echo "aws-role-arn=${aws_role_arn}" | tee -a "${GITHUB_OUTPUT}"
          echo "aws-region=${aws_region}" | tee -a "${GITHUB_OUTPUT}"
          echo "aws-bucket=${aws_bucket}" | tee -a "${GITHUB_OUTPUT}"

      - id: aws-auth
        if: inputs.publish
        uses: ./_shared-workflows-publish-techdocs/actions/aws-auth
        with:
          checkout-actions-repository-path: ./_shared-workflows-publish-techdocs
          aws-region: ${{ steps.instance-settings.outputs.aws-region }}
          role-arn: ${{ steps.instance-settings.outputs.aws-role-arn }}
          set-creds-in-environment: true

      # Pinning until resolved https://github.com/backstage/backstage/issues/25303
      - name: Install techdocs-cli
        run: sudo npm install -g @techdocs/cli@1.8.11

      - name: setup python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.11

      # Pinning until resolved https://github.com/backstage/backstage/issues/25303
      - name: Install mkdocs and mkdocs plugins
        run: python -m pip install mkdocs-techdocs-core==1.3.5 mkdocs-github-admonitions-plugin==0.0.3

      - name: Generate docs site
        run: techdocs-cli generate --no-docker --verbose
        working-directory: ${{ inputs.default-working-directory }}

      # Create an artifact out of the generated documentation so that it can be
      # debugged if necessary:
      - name: Create docs artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: site
          path: site

      - name: Publish docs site
        if: inputs.publish
        env:
          AWS_BUCKET_ENV: ${{ steps.instance-settings.outputs.aws-bucket }}
          NAMESPACE_ENV: ${{ inputs.namespace }}
          KIND_ENV: ${{ inputs.kind }}
          NAME_ENV: ${{ inputs.name }}
        working-directory: ${{ inputs.default-working-directory }}
        run: techdocs-cli publish --publisher-type awsS3 --storage-name "${AWS_BUCKET_ENV}" --entity "${NAMESPACE_ENV}/${KIND_ENV}/${NAME_ENV}"
