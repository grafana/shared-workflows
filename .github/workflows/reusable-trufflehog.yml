name: Reusable Trufflehog Scan

on:
  workflow_call:
    inputs:
      fail-on-secrets:
        description: "Fail the workflow if secrets are found"
        required: false
        default: "true"
        type: string

jobs:
  trufflehog-scan:
    runs-on: ubuntu-x64-small
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trufflehog and save JSON report
        run: |
          docker run --rm -v ${{ github.workspace }}:/pwd ghcr.io/trufflesecurity/trufflehog:latest \
            filesystem --directories=/pwd --json > trufflehog-results.json || true

      - name: Print findings in summary
        if: always()
        run: |
          if [ -s trufflehog-results.json ]; then
            echo "### Trufflehog Findings" >> $GITHUB_STEP_SUMMARY
            if jq -e 'type=="array"' trufflehog-results.json > /dev/null 2>&1; then
              jq -r '.[] | "- \(.SourceMetadata.Data.path):\(.SourceMetadata.Data.line // "?") \(.Raw | @json)"' trufflehog-results.json >> $GITHUB_STEP_SUMMARY
            else
              while read -r line; do
                echo "$line" | jq -r '"- \(.SourceMetadata.Data.path):\(.SourceMetadata.Data.line // "?") \(.Raw | @json)"'
              done < trufflehog-results.json >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "No secrets found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on PR with findings
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let findings = [];
            try {
              let data = fs.readFileSync('trufflehog-results.json', 'utf8');
              let parsed;
              try {
                parsed = JSON.parse(data);
              } catch {
                parsed = data.split('\n').filter(Boolean).map(line => {
                  try { return JSON.parse(line); } catch { return null; }
                }).filter(Boolean);
              }
              for (const finding of parsed) {
                if (finding.SourceMetadata && finding.SourceMetadata.Data) {
                  findings.push(`- \`${finding.SourceMetadata.Data.path}\` line ${finding.SourceMetadata.Data.line || '?'}: \`${(finding.Raw || '').slice(0, 80)}...\``);
                }
              }
            } catch (e) {
              findings = ['(Could not parse Trufflehog report)'];
            }
            const body = findings.length
              ? `ðŸš¨ **Trufflehog found potential secrets in this PR!**\n\n${findings.join('\n')}`
              : "Trufflehog ran but no findings were parsed.";
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      - name: Fail if secrets found
        if: ${{ inputs.fail-on-secrets == 'true' && failure() }}
        run: exit 1