name: Reusable Trufflehog Scan

on:
  workflow_call:
    inputs:
      fail-on-secrets:
        description: "Fail the workflow if secrets are found"
        required: false
        default: "true"
        type: string

jobs:
  trufflehog-scan:
    runs-on: ubuntu-x64-small
    permissions:
      contents: read
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trufflehog (JSON and SARIF)
        id: trufflehog
        run: |
          docker run --rm -v ${{ github.workspace }}:/pwd ghcr.io/trufflesecurity/trufflehog:v3.90.3 \
            filesystem /pwd --format json --output /pwd/trufflehog-results.tmp
          docker run --rm -v ${{ github.workspace }}:/pwd ghcr.io/trufflesecurity/trufflehog:v3.90.3 \
            filesystem /pwd --format sarif --output /pwd/trufflehog.sarif
          if [ -s trufflehog-results.tmp ]; then
            echo "found_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "found_secrets=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload SARIF to GitHub
        if: ${{ steps.trufflehog.outputs.found_secrets == 'true' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trufflehog.sarif

      - name: Add summary to PR
        if: ${{ steps.trufflehog.outputs.found_secrets == 'true' }}
        run: |
          echo "### Trufflehog Findings" >> $GITHUB_STEP_SUMMARY
          jq -r 'select(type=="object" and .Raw and .SourceMetadata and .SourceMetadata.Data and .SourceMetadata.Data.path) | "- \(.SourceMetadata.Data.path):\(.SourceMetadata.Data.line // "?") \(.Raw | @json)"' trufflehog-results.tmp >> $GITHUB_STEP_SUMMARY || true

      - name: Comment on PR with findings
        if: ${{ steps.trufflehog.outputs.found_secrets == 'true' && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let findings = [];
            try {
              const lines = fs.readFileSync('trufflehog-results.tmp', 'utf8')
                .split('\n')
                .filter(Boolean);
              for (const line of lines) {
                let finding;
                try {
                  finding = JSON.parse(line);
                } catch (e) {
                  continue;
                }
                if (finding.SourceMetadata && finding.SourceMetadata.Data) {
                  findings.push(`- \`${finding.SourceMetadata.Data.path}\` line ${finding.SourceMetadata.Data.line || '?'}: \`${finding.Raw.slice(0, 80)}...\``);
                }
              }
            } catch (e) {
              findings = ['(Could not parse Trufflehog report)'];
            }
            const body = findings.length
              ? `ðŸš¨ **Trufflehog found potential secrets in this PR!**\n\n${findings.join('\n')}`
              : "Trufflehog ran but no findings were parsed.";
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      - name: Fail if secrets found
        if: ${{ inputs.fail-on-secrets == 'true' && steps.trufflehog.outputs.found_secrets == 'true' }}
        run: exit 1