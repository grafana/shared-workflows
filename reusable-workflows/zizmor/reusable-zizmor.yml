name: zizmor (reusable)

on:
  workflow_call:
    inputs:
      min-severity:
        description: "Only show results at or above this severity [possible values: unknown, informational, low, medium, high]"
        required: false
        type: string
        default: "low"

      min-confidence:
        description: "Only show results at or above this confidence level [possible values: unknown, low, medium, high]"
        required: false
        type: string
        default: "low"

      fail-severity:
        description: "Fail the build if any result is at or above this severity [possible values: never, any, informational, low, medium, high]"
        required: false
        type: string
        default: "high"

      runs-on:
        description: "The runner to use for jobs"
        required: false
        type: string
        default: "ubuntu-latest"

permissions: {}

# TODO:
# - [ ] Write a README. (Include some FAQs.)
# - [ ] Set up release-please, and make sure the linter catches reusable workflows.

jobs:
  analysis:
    name: Generate and upload zizmor results ðŸŒˆ

    runs-on: ${{ inputs.runs-on }}

    permissions:
      actions: read
      contents: read

      # comment with the results
      pull-requests: write
      # upload the results to code-scanning dashboard.
      security-events: write

    env:
      MIN_SEVERITY: ${{ inputs.min-severity }}
      MIN_CONFIDENCE: ${{ inputs.min-confidence }}

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@11df97af8e8102fd60b60a77dfbf58d40cd843b8 # v1.10.1
        with:
          cache-on-failure: true

      - name: Get zizmor
        shell: sh
        # This is a commit with the `unpinned-uses` action available, which is something we want.
        env:
          ZIZMOR_COMMIT: fc5683c0f457f5766c3f175fad705dc8b0515bd7
        run: >-
          RUSTFLAGS=-Awarnings
          cargo
          install
          --git https://github.com/woodruffw/zizmor
          --rev "${ZIZMOR_COMMIT}"
          zizmor

      - name: Run zizmor
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: sh
        run: >-
          zizmor
          --format sarif
          --min-severity "${MIN_SEVERITY}"
          --min-confidence "${MIN_CONFIDENCE}"
          ${RUNNER_DEBUG:+"--verbose"}
          .
          > results.sarif

      - name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      - name: Upload to code-scanning
        uses: github/codeql-action/upload-sarif@f09c1c0a94de965c15400f5634aa42fac8fb8f88 # v3.27.5
        with:
          sarif_file: results.sarif
          category: zizmor

      - name: Run zizmor with plain output
        id: zizmor-plain
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -o pipefail

          echo "zizmor-results<<EOF" >> "${GITHUB_OUTPUT}"
          # don't fail the build if zizmor fails - we want to capture the output
          # and the exit code
          set +e
          zizmor \
            --format plain \
            --min-severity "${MIN_SEVERITY}" \
            --min-confidence "${MIN_CONFIDENCE}" \
            ${RUNNER_DEBUG:+"--verbose"} \
            . \
            | tee -a "${GITHUB_OUTPUT}"
          zizmor_exit_code=$?
          set -e
          echo "EOF" >> "${GITHUB_OUTPUT}"

          # Error 1 is a failure of zizmor itself
          if [ "${zizmor_exit_code}" -eq 1 ]; then
            echo "zizmor itself failed - check the above output. failing the workflow."
            exit 1
          fi

          echo "zizmor-exit-code=${zizmor_exit_code}" | tee -a "${GITHUB_OUTPUT}"

      - name: Hide any previous comments
        id: hide-comments
        uses: int128/hide-comment-action@dafbbede100206f5401d06fa852a1c6997984cb3 # v1.37.0
        with:
          ends-with: "<!-- comment-action/${{ github.workflow }}/${{ github.job }} -->"

      - name: Comment with zizmor results
        if: steps.zizmor-plain.outputs.zizmor-exit-code != 0
        uses: int128/comment-action@a20dbdebd79ab886a1e7a20d16bfa7dbaa732e5a # v1.33.0
        with:
          post: |
            :cry: zizmor failed with exit code ${{ steps.zizmor-plain.outputs.zizmor-exit-code }}.

            <details>
            <summary>Expand for full output</summary>

            ```
            ${{ steps.zizmor-plain.outputs.zizmor-results }}
            ```
            </details>
            ${{ steps.hide-comments.outputs.ends-with }}

      - name: Fail the build
        if: inputs.fail-severity != 'never' && steps.zizmor-plain.outputs.zizmor-exit-code != 0
        shell: sh
        env:
          FAIL_LEVEL: ${{ inputs.fail-severity }}
          EXIT_CODE: ${{ steps.zizmor-plain.outputs.zizmor-exit-code }}
        run: |
          case "${FAIL_LEVEL}" in
            any)
              FAIL_EXIT_CODE=10
              ;;
            informational)
              FAIL_EXIT_CODE=11
              ;;
            low)
              FAIL_EXIT_CODE=12
              ;;
            medium)
              FAIL_EXIT_CODE=13
              ;;
            high)
              FAIL_EXIT_CODE=14
              ;;
            *)
              echo "Unknown fail level: ${FAIL_LEVEL}"
              exit 1
              ;;
          esac

          if [ "${EXIT_CODE}" -ge "${FAIL_EXIT_CODE}" ]; then
            echo "Failing the build due to findings at or above ${FAIL_LEVEL} severity."
            exit 1
          fi
